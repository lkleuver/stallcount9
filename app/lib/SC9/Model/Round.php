<?php

/**
 * Round
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Round extends BaseRound {

	public function exportRoundResultsToMySQL() {
	//	sSQL = "UPDATE score SET score_home = " & .Offset(i - 1, 1) & ", score_away = " & .Offset(i - 1, 3)
	//	sSQL = sSQL & " WHERE team_home = '" & SQLString(.Offset(i - 1, 0)) & "' && team_away = '" & SQLString(.Offset(i - 1, 2)) & "'"
	//	sSQL = sSQL & " && division='" & Range("Division") & "' && round = " & curRound
	
		// assumes that the matchups already exist in the database
		FB::group('Model/Round.php: export results of round '.$this->rank.' of pool with id '.$this->pool_id);
		
		header("content-type: text/plain");
		
		foreach($this->Matches as $match) {
			$sql = "UPDATE score_2011 SET score_home = ".$match->homeScore.", score_away = ".$match->awayScore;
			$sql .= " WHERE team_home = '".SMS::mysql_escape_mimic($match->HomeTeam->name)."' && team_away = '".SMS::mysql_escape_mimic($match->AwayTeam->name)."'";			
			$sql .= " && division = '".$this->Pool->Stage->Division->title."' && round = '".$this->rank."';\n";
			echo $sql;			
		}
				
		FB::groupEnd();
	}
	
	public function exportRoundMatchupsToMySQL() {
//		sSQL = "INSERT INTO score SET round=" & nextRoundNumber & ", division='" & Range("Division") & "', "
//		sSQL = sSQL & "team_home = '" & SQLString(.Offset(i - 1, 0).Value) & "', team_away = '" & SQLString(.Offset(i - 1, 1)) & "'"
//		If .Offset(i - 1, 3) > 0 Then
//			sSQL = sSQL & ", field = " & .Offset(i - 1, 3)
				
		FB::group('Model/Round.php: export matchups of round '.$this->rank.' of pool with id '.$this->pool_id);
		
		header("content-type: text/plain");
		
		foreach($this->Matches as $match) {
			$sql = "INSERT INTO score_2011 SET round = ".$this->rank.", division = '".$this->Pool->Division->title."'";
			$sql .= ", team_home = '".SMS::mysql_escape_mimic($match->HomeTeam->name)."', team_away = '".SMS::mysql_escape_mimic($match->AwayTeam->name)."'";
			if ($match->Field !== null) {
				$sql .= ", field = '".$match->Field->name."'";
			}
			$sql .= "\n";
			echo $sql;			
		}
				
		FB::groupEnd();
	}
		
	
	public static function deleteRounds($poolId) {
		$rounds = Round::getRounds($poolId);
		foreach($rounds as $round) {
			foreach($round->Matches as $match) {
				$match->delete();
			}
			$round->delete();
		}
	}
		
	public static function getRounds($poolId) {
		FB::error('maybe this does not work, we should fetchOne instead of execute');
		$q = Doctrine_Query::create()
			    ->from('Round r')
			    ->leftJoin('r.Matches m')
			    ->leftJoin('m.HomeTeam ht')
			    ->leftJoin('m.AwayTeam at')
			    ->leftJoin('m.Field f')
			    ->where('r.pool_id = ?', $poolId)
			    ->orderBy('r.rank ASC, m.rank ASC');
		return $q->execute();
	}

	public static function getRoundByRank($poolId, $roundRank) {
		$q = Doctrine_Query::create()
			    ->from('Round r')
			    ->leftJoin('r.Matches m')
			    ->where('r.pool_id = "'.$poolId.'" AND r.rank = "'.$roundRank.'"')
			    ->orderBy('m.rank ASC');
//	    echo "<br> SQL:" . $roundRank . " <br> ". $q->getSqlQuery() ."</br>";
		return $q->fetchOne();
	}

	public static function getRoundById($roundId) {
		$q = Doctrine_Query::create()
			    ->from('Round r')
			    ->leftJoin('r.Matches m')
			    ->where('r.id = "'.$roundId.'"')
			    ->orderBy('m.rank ASC');
		return $q->fetchOne();
	}
	
}