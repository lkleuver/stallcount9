<?php

/**
 * Pool
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Pool extends BasePool {

	private $_strategy; //type: SC9_Strategy_Interface
	
	
	//TODO: currently assumes it's the only pool and consumes all teamspots
	public function schedule($teamCount) {

		$nrOfRounds = $this->getStrategy()->calculateNumberOfRounds($teamCount);
		echo "ROUNDS " .$nrOfRounds."<br />";
		
		$matchCountPerRound = ceil($teamCount / 2);
		
		for($i = 0; $i < $nrOfRounds; $i++) {
			echo "loop<br />";
			$round = new Round();
			$round->rank = $i+1;
			$round->matchLength = $this->PoolRuleset->matchLength;
			$round->link('Pool', array($this->id));	
			$round->save();
			
			for($j = 0; $j < $matchCountPerRound; $j++) {
				$match = new RoundMatch();
				$match->link('Round', array($round->id));
				$match->rank = $j+1;
				$match->matchName = "match rank ".($j + 1);
				//link fields
				$match->save();
			}
		}
		
		return $teamCount;
	}
	
	public function getTeamCount() {
		return count($this->Teams);
	}
	
	/**
	 * 
	 * returns the number of teams that will qualify
	 */
	public function getQualifiedTeamCount() {
		//return $this->getStrategy()->
	}
	
	public function getStrategy(){
		if($this->_strategy == null) {
			$this->_strategy = SC9_Factory_Strategy::createStrategy($this->PoolRuleset);
		}
		return $this->_strategy;
	}
	
	public static function getById($id) {
		$q = Doctrine_Query::create()
			    ->from('Pool p')
			    ->leftJoin('p.Stage s')
			    ->leftJoin('p.PoolRuleset rs')
			    ->leftJoin('rs.PoolStrategy ps')
			    ->leftJoin('p.Teams t')
			    ->leftJoin('p.Rounds r')
			    ->leftJoin('r.Matches rm')
			    ->where('p.id = ?', $id);
		$pool = $q->fetchOne();
		return $pool;
	}
	
}